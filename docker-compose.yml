networks:
  default:
    name: cockroachdb-net

volumes:
  roach-db-1-data:
    name: roach-db-1-data
  roach-db-2-data:
    name: roach-db-2-data
  roach-db-3-data:
    name: roach-db-3-data

services:
  cockroach-db-1:
    image: cockroachdb/cockroach:latest-v23.1
    hostname: cockroach-db-1.local
    command: >
      start 
      --certs-dir=/certs
      --advertise-addr=cockroach-db-1.local:$CLUSTER_GRPC_PORT
      --http-addr=0.0.0.0:$CONSOLE_HTTP_PORT
      --listen-addr=cockroach-db-1.local:$CLUSTER_GRPC_PORT
      --sql-addr=cockroach-db-1.local:$CLIENT_SQL_PORT
      --join=cockroach-db-1.local:$CLUSTER_GRPC_PORT,cockroach-db-2.local:$CLUSTER_GRPC_PORT,cockroach-db-3.local:$CLUSTER_GRPC_PORT
    volumes:
      - ./certs/ca.crt:/certs/ca.crt:ro
      - ./certs/node-1.crt:/certs/node.crt:ro
      - ./certs/node-1.key:/certs/node.key:ro
      - roach-db-1-data:/cockroach/cockroach-data
    ports:
      - 127.0.0.1:8081:$CONSOLE_HTTP_PORT # allow console access only from localhost
    healthcheck:
      # https://docs.docker.com/engine/reference/builder/#healthcheck
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
    stop_grace_period: 20s
    depends_on:
      cluster-create-certs:
        condition: service_completed_successfully
    networks:
      - default

  cockroach-db-2:
    image: cockroachdb/cockroach:latest-v23.1
    hostname: cockroach-db-2.local
    command: >
      start 
      --certs-dir=/certs
      --advertise-addr=cockroach-db-2.local:$CLUSTER_GRPC_PORT
      --http-addr=0.0.0.0:$CONSOLE_HTTP_PORT
      --listen-addr=cockroach-db-2.local:$CLUSTER_GRPC_PORT
      --sql-addr=cockroach-db-2.local:$CLIENT_SQL_PORT
      --join=cockroach-db-1.local:$CLUSTER_GRPC_PORT,cockroach-db-2.local:$CLUSTER_GRPC_PORT,cockroach-db-3.local:$CLUSTER_GRPC_PORT
    volumes:
      - ./certs/ca.crt:/certs/ca.crt:ro
      - ./certs/node-2.crt:/certs/node.crt:ro
      - ./certs/node-2.key:/certs/node.key:ro
      - roach-db-2-data:/cockroach/cockroach-data
    ports:
      - 127.0.0.1:8082:$CONSOLE_HTTP_PORT
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
    stop_grace_period: 20s
    depends_on:
      cluster-create-certs:
        condition: service_completed_successfully
    networks:
      - default

  cockroach-db-3:
    image: cockroachdb/cockroach:latest-v23.1
    hostname: cockroach-db-3.local
    command: >
      start 
      --certs-dir=/certs
      --advertise-addr=cockroach-db-3.local:$CLUSTER_GRPC_PORT
      --http-addr=0.0.0.0:$CONSOLE_HTTP_PORT
      --listen-addr=cockroach-db-3.local:$CLUSTER_GRPC_PORT
      --sql-addr=cockroach-db-3.local:$CLIENT_SQL_PORT
      --join=cockroach-db-1.local:$CLUSTER_GRPC_PORT,cockroach-db-2.local:$CLUSTER_GRPC_PORT,cockroach-db-3.local:$CLUSTER_GRPC_PORT
    volumes:
      - ./certs/ca.crt:/certs/ca.crt:ro
      - ./certs/node-3.crt:/certs/node.crt:ro
      - ./certs/node-3.key:/certs/node.key:ro
      - roach-db-3-data:/cockroach/cockroach-data
    ports:
      - 127.0.0.1:8083:$CONSOLE_HTTP_PORT
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
    stop_grace_period: 20s
    depends_on:
      cluster-create-certs:
        condition: service_completed_successfully
    networks:
      - default

  cluster-create-certs:
    # this sets up the certs for all the cluster nodes
    # https://www.cockroachlabs.com/docs/stable/deploy-cockroachdb-on-premises#step-2-generate-certificates
    image: cockroachdb/cockroach:latest-v23.1
    volumes:
      - ./src/create-cluster-certs.sh:/scripts/create-cluster-certs.sh
      - ./certs:/certs
      - ./ca-key:/ca-key
    # Override the entrypoint because the Dockerfile runs its shell script in
    # the entrypoint. Seems like we can't override the entrypoint and the
    # command in separate keys
    entrypoint: /scripts/create-cluster-certs.sh
    networks:
      - default

  cluster-init:
    # https://www.cockroachlabs.com/docs/stable/cockroach-init#initialize-a-cluster-from-another-machine
    image: cockroachdb/cockroach:latest-v23.1
    entrypoint: /scripts/init-cluster.sh
    env_file: .env
    volumes:
      - ./src/init-cluster.sh:/scripts/init-cluster.sh
      - ./certs:/certs
    depends_on:
      # https://www.cockroachlabs.com/docs/stable/monitoring-and-alerting#health-endpoints
      # can't get localhost:8080 working as intended
      cockroach-db-1:
        condition: service_healthy
      cockroach-db-2:
        condition: service_healthy
      cockroach-db-3:
        condition: service_healthy
    networks:
      - default

  cockroach-db:
    image: haproxy:2.8-bullseye
    hostname: cockroach-db.local
    volumes:
      # haproxy config file generated by cockroachdb
      # https://www.cockroachlabs.com/docs/stable/deploy-cockroachdb-on-premises#step-6-set-up-load-balancing
      - ./haproxy-config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - $CONSOLE_HTTP_PORT:$CONSOLE_HTTP_PORT
    depends_on:
      cockroach-db-1:
        condition: service_healthy
      cockroach-db-2:
        condition: service_healthy
      cockroach-db-3:
        condition: service_healthy
    networks:
      - default
    restart: unless-stopped
